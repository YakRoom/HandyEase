/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Yakroom
 * The supercharged yakroom APIs
 * OpenAPI spec version: 1.0
 */
export interface UpdateUserDto {
  /** User full name */
  name: string;
  /** User date of birth */
  dateOfBirth?: string;
  /** User password - must contain at least 8 characters, one uppercase, one lowercase, one number, and one special character */
  password: string;
}

export interface LoginAuthDto {
  /** User email address */
  email: string;
  /** User password */
  password: string;
}

/**
 * User role
 */
export type CreateUserDtoRole = typeof CreateUserDtoRole[keyof typeof CreateUserDtoRole];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreateUserDtoRole = {
  CONSUMER: 'CONSUMER',
  PROVIDER: 'PROVIDER',
} as const;

export interface CreateUserDto {
  /** User email address */
  email: string;
  /** User full name */
  name: string;
  /** User date of birth */
  dateOfBirth?: string;
  /** User password - must contain at least 8 characters, one uppercase, one lowercase, one number, and one special character */
  password: string;
  /** User role */
  role: CreateUserDtoRole;
}

export interface VerifyOtpDto {
  /**
   * One-time password code
   * @minLength 6
   * @maxLength 6
   */
  otp: string;
}

export type CreateProviderDtoServiceTypesItem = { [key: string]: unknown };

export interface CreateProviderDto {
  /** The URL of the provider's profile picture */
  providerPicture: string;
  /** Types of services offered by the provider */
  serviceTypes: CreateProviderDtoServiceTypesItem[];
  /** Years of experience in the field */
  experienceYears: number;
  /** Radius of location */
  radius: number;
  /** Phone number of the provider */
  phoneNumber: string;
  /** Whether to show the phone number */
  showPhoneNumber: boolean;
  /** Is price negotiable */
  isNegotiable: boolean;
  /**
   * Hourly rate charged by the provider
   * @minimum 0
   * @maximum 999.99
   */
  hourlyRate: number;
  /** Provider's biographical information */
  bio?: string;
  /** Location ID */
  locationId?: string;
  /** The URL of the provider's resume */
  resume: string;
}

export type UpdateProviderDtoServiceTypesItem = { [key: string]: unknown };

export interface UpdateProviderDto {
  /** The URL of the provider's profile picture */
  providerPicture?: string;
  /** Types of services offered by the provider */
  serviceTypes?: UpdateProviderDtoServiceTypesItem[];
  /** Years of experience in the field */
  experienceYears?: number;
  /** Radius of location */
  radius?: number;
  /** Phone number of the provider */
  phoneNumber?: string;
  /** Whether to show the phone number */
  showPhoneNumber?: boolean;
  /** Is price negotiable */
  isNegotiable?: boolean;
  /**
   * Hourly rate charged by the provider
   * @minimum 0
   * @maximum 999.99
   */
  hourlyRate?: number;
  /** Provider's biographical information */
  bio?: string;
  /** Location ID */
  locationId?: string;
  /** The URL of the provider's resume */
  resume?: string;
}

/**
 * Field to sort by
 */
export type SearchProvidersDtoSortBy = typeof SearchProvidersDtoSortBy[keyof typeof SearchProvidersDtoSortBy];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SearchProvidersDtoSortBy = {
  experience: 'experience',
  rate: 'rate',
  distance: 'distance',
} as const;

export interface SearchProvidersDto {
  /**
   * Page number (1-based)
   * @minimum 1
   */
  page?: number;
  /**
   * Number of items per page
   * @minimum 1
   */
  pageSize?: number;
  /** Field to sort by */
  sortBy?: SearchProvidersDtoSortBy;
  /** Location ID */
  locationId?: string;
  /** Service types */
  serviceTypes?: string[];
}

export interface ChangeProviderStatusDto { [key: string]: unknown }

export interface SuggestionDto { [key: string]: unknown }

export type ProvidersControllerGetProviderDetailsParams = {
userId: string;
};

